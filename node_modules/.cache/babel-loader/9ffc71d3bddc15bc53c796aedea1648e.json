{"ast":null,"code":"var _jsxFileName = \"/home/pi/Documents/Ially/alura/reactjs/react-initial/src/templates/Home/index.jsx\";\nimport './styles.css';\nimport { Component } from 'react';\nimport { loadPosts } from '../../utils/load-posts';\nimport { Posts } from '../../components/Posts';\nimport { Button } from '../../components/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Home extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      //criando o estado para a classe. O estado corresponde a um objeto que contém os dados do componente que serão renderizados a partir da função render()\n      posts: [],\n      //array de objetos em jsx: utilizamos : e não o sinal = para declarar um array\n      allPosts: [],\n      page: 0,\n      postsPerPage: 2\n    };\n\n    this.loadPosts = async () => {\n      const {\n        page,\n        postsPerPage\n      } = this.state;\n      const postsAndPhotos = await loadPosts();\n      this.setState({\n        posts: postsAndPhotos.slice(page, postsPerPage),\n        allPosts: postsAndPhotos\n      });\n    };\n\n    this.loadMorePosts = () => {\n      const {\n        page,\n        postsPerPage,\n        allPosts,\n        posts\n      } = this.state;\n      const nextPage = posts + postsPerPage;\n      const nextPosts = allPosts.slice(nextPage, nextPage + postsPerPage);\n      p;\n    };\n  }\n\n  async componentDidMount() {\n    //componente de ciclo de vida. Ele será executado uma vez após o componente ser montado na tela. É um lifecyle method de montagem.Pode ser utilizado para buscar dados de uma API\n    await this.loadPosts();\n  }\n\n  render() {\n    //só podemos ter um componente root dentro da página com React. Para adicionar mais um componente, devemos colocá-lo dentro do root\n    //precisamos inserir um Key com uma propriedade única dentro do componente-pai quando estamos utilizando o método .map()\n    const {\n      posts\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Posts, {\n        posts: posts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        text: \"Load more posts\",\n        onClick: this.loadMorePosts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Home;","map":{"version":3,"names":["Component","loadPosts","Posts","Button","Home","state","posts","allPosts","page","postsPerPage","postsAndPhotos","setState","slice","loadMorePosts","nextPage","nextPosts","p","componentDidMount","render"],"sources":["/home/pi/Documents/Ially/alura/reactjs/react-initial/src/templates/Home/index.jsx"],"sourcesContent":["import './styles.css';\nimport { Component } from 'react';\nimport { loadPosts } from '../../utils/load-posts'\nimport { Posts } from '../../components/Posts';\nimport { Button } from '../../components/Button'\n\nclass Home extends Component { //componente react. Para escrever um código JavaScript em JSX usamos um par de chaves {} e escrevemos o códgio dentro\n    //é possível criar um componente de estado sem utilizar o constructor\n  state = {  //criando o estado para a classe. O estado corresponde a um objeto que contém os dados do componente que serão renderizados a partir da função render()\n    posts: [], //array de objetos em jsx: utilizamos : e não o sinal = para declarar um array\n    allPosts: [],\n    page: 0,\n    postsPerPage: 2\n  };\n\nasync componentDidMount() { //componente de ciclo de vida. Ele será executado uma vez após o componente ser montado na tela. É um lifecyle method de montagem.Pode ser utilizado para buscar dados de uma API\n  await this.loadPosts();\n}\n\nloadPosts = async () => {\n  const { page, postsPerPage } = this.state\n  const postsAndPhotos = await loadPosts();\n  this.setState({ \n    posts: postsAndPhotos.slice(page, postsPerPage),\n    allPosts: postsAndPhotos\n  });\n}\n\nloadMorePosts = () => {\n  const {\n   page,\n   postsPerPage,\n   allPosts,\n   posts\n  } = this.state\n\n  const nextPage = posts + postsPerPage;\n  const nextPosts= allPosts.slice(nextPage, nextPage + postsPerPage)\n  p\n}\n\nrender() {\n//só podemos ter um componente root dentro da página com React. Para adicionar mais um componente, devemos colocá-lo dentro do root\n//precisamos inserir um Key com uma propriedade única dentro do componente-pai quando estamos utilizando o método .map()\n    const { posts } = this.state;\n\n    return (\n      <section className='container'>\n        <Posts posts={posts} />\n        <Button \n          text=\"Load more posts\"\n          onClick={this.loadMorePosts}\n        />\n      </section>\n    );\n  }\n} \n\nexport default Home;\n"],"mappings":";AAAA,OAAO,cAAP;AACA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,SAAT,QAA0B,wBAA1B;AACA,SAASC,KAAT,QAAsB,wBAAtB;AACA,SAASC,MAAT,QAAuB,yBAAvB;;;AAEA,MAAMC,IAAN,SAAmBJ,SAAnB,CAA6B;EAAA;IAAA;IAAA,KAE3BK,KAF2B,GAEnB;MAAG;MACTC,KAAK,EAAE,EADD;MACK;MACXC,QAAQ,EAAE,EAFJ;MAGNC,IAAI,EAAE,CAHA;MAINC,YAAY,EAAE;IAJR,CAFmB;;IAAA,KAa7BR,SAb6B,GAajB,YAAY;MACtB,MAAM;QAAEO,IAAF;QAAQC;MAAR,IAAyB,KAAKJ,KAApC;MACA,MAAMK,cAAc,GAAG,MAAMT,SAAS,EAAtC;MACA,KAAKU,QAAL,CAAc;QACZL,KAAK,EAAEI,cAAc,CAACE,KAAf,CAAqBJ,IAArB,EAA2BC,YAA3B,CADK;QAEZF,QAAQ,EAAEG;MAFE,CAAd;IAID,CApB4B;;IAAA,KAsB7BG,aAtB6B,GAsBb,MAAM;MACpB,MAAM;QACLL,IADK;QAELC,YAFK;QAGLF,QAHK;QAILD;MAJK,IAKF,KAAKD,KALT;MAOA,MAAMS,QAAQ,GAAGR,KAAK,GAAGG,YAAzB;MACA,MAAMM,SAAS,GAAER,QAAQ,CAACK,KAAT,CAAeE,QAAf,EAAyBA,QAAQ,GAAGL,YAApC,CAAjB;MACAO,CAAC;IACF,CAjC4B;EAAA;;EASN,MAAjBC,iBAAiB,GAAG;IAAE;IAC1B,MAAM,KAAKhB,SAAL,EAAN;EACD;;EAwBDiB,MAAM,GAAG;IACT;IACA;IACI,MAAM;MAAEZ;IAAF,IAAY,KAAKD,KAAvB;IAEA,oBACE;MAAS,SAAS,EAAC,WAAnB;MAAA,wBACE,QAAC,KAAD;QAAO,KAAK,EAAEC;MAAd;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,MAAD;QACE,IAAI,EAAC,iBADP;QAEE,OAAO,EAAE,KAAKO;MAFhB;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EASD;;AAjD0B;;AAoD7B,eAAeT,IAAf"},"metadata":{},"sourceType":"module"}